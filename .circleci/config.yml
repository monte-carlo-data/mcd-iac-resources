version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0
  aws-s3: circleci/aws-s3@4.0

commands:
  cmd-trufflehog-scan:
    parameters:
      disable_entropy:
        default: true
        description: Should we disable truffleHog's entropy detection?
        type: boolean
      max_history:
        default: "1"
        description: How far back to scan in git revisions
        type: string
      regexp_rules:
        default: ""
        description: Override default regexp rules with this file.
        type: string
      allowlist_file:
        default: ".circleci/trufflehog_config/allowlist.json"
        description: Add items to this file to allow you to override specific findings.
        type: string
      repo_path:
        default: .
        description: Scan alternate local or remote repo
        type: string
      current_branch:
        default: ${CIRCLE_BRANCH}
        description: Git branch to use
        type: string
    steps:
      - run:
          command: >
            trufflehog --regex --json \
                       --branch << parameters.current_branch >> \
                       <<# parameters.allowlist_file >> --allow << parameters.allowlist_file >> <</ parameters.allowlist_file >> \
                       <<# parameters.max_history >> --max_depth=<< parameters.max_history >> <</ parameters.max_history>> \
                       <<# parameters.disable_entropy >> --entropy=False <</ parameters.disable_entropy >> \
                       <<# parameters.regexp_rules >> --rules=<< parameters.regexp_rules >> <</ parameters.regexp_rules >> \
                       << parameters.repo_path >> \
                       | jq '{"reason":.reason,"path": .path}'
          name: Scan using truffleHog

jobs:
  run-trufflehog-scan:
    docker:
      - image: cimg/python:3.11
    parameters:
      current_branch:
        default: ${CIRCLE_BRANCH}
        description: Git branch to use
        type: string
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install truffleHog
      - cmd-trufflehog-scan:
          current_branch: << parameters.current_branch >>

  cloudformation-lint:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install cfn-lint
      - run:
          name: Validate templates
          command: cfn-lint templates/cloudformation/*

  terraform-lint:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: apk add --update make
      - run:
          name: Format and validate
          command: |
            cd templates/terraform
            terraform init -backend=false
            terraform fmt -recursive -check -diff
            terraform validate

workflows:
  version: 2

  publish:
    jobs:
      - run-trufflehog-scan
      - cloudformation-lint
      - terraform-lint
      - aws-s3/sync:
          name: publish-resources-dev
          auth:
            - aws-cli/setup:
                aws_access_key_id: AWS_ACCESS_KEY_ID
                aws_secret_access_key: AWS_SECRET_ACCESS_KEY
                region: AWS_REGION
          context: aws-dev
          requires:
            - run-trufflehog-scan
            - cloudformation-lint
            - terraform-lint
          filters:
            branches:
              only:
                - dev
          from: ./templates/
          to: s3://${PUBLIC_RESOURCES_BUCKET}
      - aws-s3/sync:
          name: publish-resources-prod
          auth:
            - aws-cli/setup:
                aws_access_key_id: AWS_ACCESS_KEY_ID
                aws_secret_access_key: AWS_SECRET_ACCESS_KEY
                region: AWS_REGION
          context: aws-prod
          requires:
            - run-trufflehog-scan
            - cloudformation-lint
            - terraform-lint
          filters:
            branches:
              only:
                - main
          from: ./templates/
          to: s3://${PUBLIC_RESOURCES_BUCKET}